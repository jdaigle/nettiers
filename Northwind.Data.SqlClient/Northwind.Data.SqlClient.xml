<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Northwind.Data.SqlClient</name>
    </assembly>
    <members>
        <member name="T:Northwind.Data.SqlClient.SqlOrdersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Orders"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlOrdersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Orders"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrdersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrdersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.GetByProductIdFromOrderDetails(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Orders objects from the datasource by ProductID in the
            	Order Details table. Table Orders is related to table Products
            	through the (M:N) relationship defined in the Order Details table.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_productId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Orders objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.Delete(Northwind.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_orderId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.Orders objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.Orders objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Orders objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Orders objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.GetByCustomerId(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the CustomerID index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_customerId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.GetByEmployeeId(Northwind.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the EmployeeID index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_employeeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.GetByOrderDate(Northwind.Data.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the OrderDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_orderDate"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.GetByOrderId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Orders index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_orderId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.Orders"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.GetByShippedDate(Northwind.Data.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ShippedDate index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_shippedDate"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.GetByShipVia(Northwind.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ShippersOrders index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_shipVia"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.GetByShipPostalCode(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ShipPostalCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_shipPostalCode"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.Orders})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Orders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.Orders)">
            <summary>
            	Inserts a Northwind.Entities.Orders object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Orders object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Orders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.Orders)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Orders object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.Orders object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrdersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrdersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrdersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrdersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCustomersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Customers"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCustomersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Customers"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.GetByCustomerTypeIdFromCustomerCustomerDemo(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Customers objects from the datasource by CustomerTypeID in the
            	CustomerCustomerDemo table. Table Customers is related to table CustomerDemographics
            	through the (M:N) relationship defined in the CustomerCustomerDemo table.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_customerTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Customers objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.Delete(Northwind.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customerId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.Customers objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.Customers objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Customers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Customers objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.GetByCity(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the City index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_city"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.GetByCompanyName(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the CompanyName index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_companyName"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.GetByCustomerId(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Customers index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_customerId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.Customers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.GetByPostalCode(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PostalCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_postalCode"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.GetByRegion(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Region index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_region"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.Customers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Customers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.Customers)">
            <summary>
            	Inserts a Northwind.Entities.Customers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Customers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Customers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.Customers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Customers object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.Customers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.SummaryOfSalesByQuarter"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the SummaryOfSalesByQuarter objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SummaryOfSalesByQuarter objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SummaryOfSalesByQuarter objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of SummaryOfSalesByQuarter objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSummaryOfSalesByQuarterProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the ProductsByCategory objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductsByCategory objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductsByCategory objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of ProductsByCategory objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductsByCategoryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlOrdersQryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.OrdersQry"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlOrdersQryProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the OrdersQry objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersQryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrdersQryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersQryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrdersQryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersQryProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of OrdersQry objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersQryProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of OrdersQry objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersQryProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of OrdersQry objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrdersQryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrdersQryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrdersQryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrdersQryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrdersQryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlSuppliersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Suppliers"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSuppliersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSuppliersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.Delete(Northwind.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_supplierId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.Suppliers objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.Suppliers objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Suppliers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Suppliers objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.GetByCompanyName(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the CompanyName index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_companyName"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.GetBySupplierId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Suppliers index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_supplierId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.Suppliers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.GetByPostalCode(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PostalCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_postalCode"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.Suppliers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Suppliers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.Suppliers)">
            <summary>
            	Inserts a Northwind.Entities.Suppliers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Suppliers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Suppliers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.Suppliers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Suppliers object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.Suppliers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSuppliersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSuppliersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSuppliersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlSalesByCategoryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.SalesByCategory"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the SalesByCategory objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SalesByCategory objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SalesByCategory objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of SalesByCategory objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSalesByCategoryProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesByCategoryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSalesByCategoryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlProductsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Products"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlProductsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Products"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.GetByOrderIdFromOrderDetails(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Products objects from the datasource by OrderID in the
            	Order Details table. Table Products is related to table Orders
            	through the (M:N) relationship defined in the Order Details table.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_orderId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Products objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.Delete(Northwind.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_productId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.Products objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.Products objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Products objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Products objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.GetByCategoryId(Northwind.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the CategoriesProducts index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_categoryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.GetByProductId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Products index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_productId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.Products"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.GetByProductName(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ProductName index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_productName"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.GetBySupplierId(Northwind.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the SupplierID index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_supplierId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.Products})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Products object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.Products)">
            <summary>
            	Inserts a Northwind.Entities.Products object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Products object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Products object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.Products)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Products object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.Products object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlRegionProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Region"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlRegionProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlRegionProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.Delete(Northwind.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_regionId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.Region objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.Region objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Region objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Region objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.GetByRegionId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Region index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_regionId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.Region"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.Region})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Region object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.Region)">
            <summary>
            	Inserts a Northwind.Entities.Region object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Region object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Region object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.Region)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Region object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.Region object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlRegionProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlRegionProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlRegionProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the OrderSubtotals objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of OrderSubtotals objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of OrderSubtotals objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of OrderSubtotals objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrderSubtotalsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the CustomerAndSuppliersByCity objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CustomerAndSuppliersByCity objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CustomerAndSuppliersByCity objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of CustomerAndSuppliersByCity objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.CustomerCustomerDemo"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.Delete(Northwind.Data.TransactionManager,System.String,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customerId">. Primary Key.</param>	
            <param name="_customerTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.CustomerCustomerDemo objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.CustomerCustomerDemo objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.CustomerCustomerDemo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.CustomerCustomerDemo objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.GetByCustomerTypeId(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerCustomerDemo key.
            	FK_CustomerCustomerDemo Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_customerTypeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.CustomerCustomerDemo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.GetByCustomerId(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_CustomerCustomerDemo_Customers key.
            	FK_CustomerCustomerDemo_Customers Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_customerId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.CustomerCustomerDemo objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.GetByCustomerIdCustomerTypeId(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CustomerCustomerDemo index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_customerId"></param>
            <param name="_customerTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.CustomerCustomerDemo"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.CustomerCustomerDemo})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.CustomerCustomerDemo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.CustomerCustomerDemo)">
            <summary>
            	Inserts a Northwind.Entities.CustomerCustomerDemo object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.CustomerCustomerDemo object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.CustomerCustomerDemo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.CustomerCustomerDemo)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.CustomerCustomerDemo object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.CustomerCustomerDemo object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlEmployeesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Employees"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlEmployeesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Employees"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlEmployeesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlEmployeesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.GetByTerritoryIdFromEmployeeTerritories(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Employees objects from the datasource by TerritoryID in the
            	EmployeeTerritories table. Table Employees is related to table Territories
            	through the (M:N) relationship defined in the EmployeeTerritories table.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_territoryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Employees objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.Delete(Northwind.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_employeeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.Employees objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.Employees objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Employees objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Employees objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.GetByReportsTo(Northwind.Data.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Employees_Employees key.
            	FK_Employees_Employees Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_reportsTo"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Employees objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.GetByLastName(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the LastName index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_lastName"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.GetByEmployeeId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Employees index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_employeeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.Employees"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.GetByPostalCode(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PostalCode index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_postalCode"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.Employees})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Employees object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.Employees)">
            <summary>
            	Inserts a Northwind.Entities.Employees object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Employees object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Employees object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.Employees)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Employees object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.Employees object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlEmployeesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlEmployeesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlEmployeesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlEmployeesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlRegionProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Region"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlRegionProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlRegionProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlProductsByCategoryProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.ProductsByCategory"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsByCategoryProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductsByCategoryProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.EmployeeTerritories"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.Delete(Northwind.Data.TransactionManager,System.Int32,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_employeeId">. Primary Key.</param>	
            <param name="_territoryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.EmployeeTerritories objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.EmployeeTerritories objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.EmployeeTerritories objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.EmployeeTerritories objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.GetByEmployeeId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeTerritories_Employees key.
            	FK_EmployeeTerritories_Employees Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_employeeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.EmployeeTerritories objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.GetByTerritoryId(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_EmployeeTerritories_Territories key.
            	FK_EmployeeTerritories_Territories Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_territoryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.EmployeeTerritories objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.GetByEmployeeIdTerritoryId(Northwind.Data.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_EmployeeTerritories index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_employeeId"></param>
            <param name="_territoryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.EmployeeTerritories"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.EmployeeTerritories})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.EmployeeTerritories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.EmployeeTerritories)">
            <summary>
            	Inserts a Northwind.Entities.EmployeeTerritories object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.EmployeeTerritories object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.EmployeeTerritories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.EmployeeTerritories)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.EmployeeTerritories object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.EmployeeTerritories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlQuarterlyOrdersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.QuarterlyOrders"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the QuarterlyOrders objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of QuarterlyOrders objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of QuarterlyOrders objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of QuarterlyOrders objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlQuarterlyOrdersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlQuarterlyOrdersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlQuarterlyOrdersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlNetTiersProvider">
            <summary>
            This class is the Sql implementation of the NetTiersProvider.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:Northwind.Data.SqlClient.SqlNetTiersProvider"/> class.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.CreateTransaction">
            <summary>
            Creates a new <see cref="T:Northwind.Data.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(Northwind.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(Northwind.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteNonQuery(Northwind.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(Northwind.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(Northwind.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteReader(Northwind.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(Northwind.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(Northwind.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteDataSet(Northwind.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(Northwind.Data.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(Northwind.Data.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlNetTiersProvider.ExecuteScalar(Northwind.Data.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.UseStoredProcedure">
            <summary>
            Gets a value indicating whether to use stored procedure or not.
            </summary>
            <value>
            	<c>true</c> if this repository use stored procedures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.IsTransactionSupported">
            <summary>
             Indicates if the current <see cref="T:Northwind.Data.Bases.NetTiersProvider"/> implementation supports Transacton.
            </summary>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.RegionProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.Region"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlRegionProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlRegionProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.TerritoriesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.Territories"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlTerritoriesProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlTerritoriesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.EmployeesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.Employees"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlEmployeesProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlEmployeesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SuppliersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.Suppliers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlSuppliersProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlSuppliersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.CustomersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.Customers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCustomersProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCustomersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.CategoriesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.Categories"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCategoriesProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCategoriesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.CustomerDemographicsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.CustomerDemographics"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCustomerDemographicsProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCustomerDemographicsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.CustomerCustomerDemoProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.CustomerCustomerDemo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCustomerCustomerDemoProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCustomerCustomerDemoProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.ShippersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.Shippers"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlShippersProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlShippersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.ProductsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.Products"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlProductsProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlProductsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.OrdersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.Orders"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlOrdersProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlOrdersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.EmployeeTerritoriesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.EmployeeTerritories"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlEmployeeTerritoriesProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlEmployeeTerritoriesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.OrderDetailsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.OrderDetails"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlOrderDetailsProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlOrderDetailsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.AlphabeticalListOfProductsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.AlphabeticalListOfProducts"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlAlphabeticalListOfProductsProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlAlphabeticalListOfProductsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.CategorySalesFor1997Provider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.CategorySalesFor1997"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCategorySalesFor1997Provider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCategorySalesFor1997Provider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.CurrentProductListProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.CurrentProductList"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCurrentProductListProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCurrentProductListProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.CustomerAndSuppliersByCityProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.CustomerAndSuppliersByCity"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCustomerAndSuppliersByCityProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlCustomerAndSuppliersByCityProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.InvoicesProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.Invoices"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlInvoicesProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlInvoicesProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.OrderDetailsExtendedProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.OrderDetailsExtended"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlOrderDetailsExtendedProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlOrderDetailsExtendedProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.OrderSubtotalsProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.OrderSubtotals"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlOrderSubtotalsProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlOrderSubtotalsProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.OrdersQryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.OrdersQry"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlOrdersQryProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlOrdersQryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.ProductSalesFor1997Provider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.ProductSalesFor1997"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlProductSalesFor1997Provider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlProductSalesFor1997Provider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.ProductsAboveAveragePriceProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.ProductsAboveAveragePrice"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlProductsAboveAveragePriceProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlProductsAboveAveragePriceProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.ProductsByCategoryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.ProductsByCategory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlProductsByCategoryProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlProductsByCategoryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.QuarterlyOrdersProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.QuarterlyOrders"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlQuarterlyOrdersProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlQuarterlyOrdersProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SalesByCategoryProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.SalesByCategory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlSalesByCategoryProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlSalesByCategoryProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SalesTotalsByAmountProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.SalesTotalsByAmount"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlSalesTotalsByAmountProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlSalesTotalsByAmountProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SummaryOfSalesByQuarterProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.SummaryOfSalesByQuarter"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlSummaryOfSalesByQuarterProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlSummaryOfSalesByQuarterProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SummaryOfSalesByYearProvider">
            <summary>
             This class is the Data Access Logic Component for the <see cref="T:Northwind.Entities.SummaryOfSalesByYear"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
             <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlSummaryOfSalesByYearProvider">
            <summary>
            Gets the current <see cref="P:Northwind.Data.SqlClient.SqlNetTiersProvider.SqlSummaryOfSalesByYearProvider"/>.
            </summary>
            <value></value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.CustomerDemographics"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.GetByCustomerIdFromCustomerCustomerDemo(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets CustomerDemographics objects from the datasource by CustomerID in the
            	CustomerCustomerDemo table. Table CustomerDemographics is related to table Customers
            	through the (M:N) relationship defined in the CustomerCustomerDemo table.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_customerId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of CustomerDemographics objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.Delete(Northwind.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_customerTypeId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.CustomerDemographics objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.CustomerDemographics objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.CustomerDemographics objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.CustomerDemographics objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.GetByCustomerTypeId(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CustomerDemographics index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_customerTypeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.CustomerDemographics"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.CustomerDemographics})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.CustomerDemographics object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.CustomerDemographics)">
            <summary>
            	Inserts a Northwind.Entities.CustomerDemographics object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.CustomerDemographics object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.CustomerDemographics object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.CustomerDemographics)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.CustomerDemographics object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.CustomerDemographics object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCustomerDemographicsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCustomerDemographicsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.CustomerDemographics"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerDemographicsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomerDemographicsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCategoriesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Categories"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCategoriesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Categories"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCategoriesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCategoriesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.Delete(Northwind.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_categoryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.Categories objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.Categories objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Categories objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Categories objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.GetByCategoryName(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the CategoryName index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_categoryName"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.GetByCategoryId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Categories index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_categoryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.Categories"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.Categories})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Categories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.Categories)">
            <summary>
            	Inserts a Northwind.Entities.Categories object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Categories object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Categories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.Categories)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Categories object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.Categories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCategoriesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCategoriesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCategoriesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategoriesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCategoriesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlTerritoriesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Territories"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlTerritoriesProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Territories"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlTerritoriesProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlTerritoriesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.GetByEmployeeIdFromEmployeeTerritories(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets Territories objects from the datasource by EmployeeID in the
            	EmployeeTerritories table. Table Territories is related to table Employees
            	through the (M:N) relationship defined in the EmployeeTerritories table.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_employeeId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns a <c>TList</c> of Territories objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.Delete(Northwind.Data.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_territoryId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.Territories objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.Territories objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Territories objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Territories objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.GetByRegionId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_Territories_Region key.
            	FK_Territories_Region Description: 
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_regionId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Territories objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.GetByTerritoryId(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Territories index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_territoryId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.Territories"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.Territories})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Territories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.Territories)">
            <summary>
            	Inserts a Northwind.Entities.Territories object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Territories object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Territories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.Territories)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Territories object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.Territories object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlTerritoriesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlTerritoriesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlTerritoriesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the SalesTotalsByAmount objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SalesTotalsByAmount objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SalesTotalsByAmount objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of SalesTotalsByAmount objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the OrderDetailsExtended objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of OrderDetailsExtended objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of OrderDetailsExtended objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of OrderDetailsExtended objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlInvoicesProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the Invoices objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlInvoicesProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlInvoicesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlInvoicesProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlInvoicesProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlInvoicesProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Invoices objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlInvoicesProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Invoices objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlInvoicesProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Invoices objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlInvoicesProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlInvoicesProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlInvoicesProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.CustomerAndSuppliersByCity"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomerAndSuppliersByCityProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the ProductsAboveAveragePrice objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductsAboveAveragePrice objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductsAboveAveragePrice objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of ProductsAboveAveragePrice objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.OrderDetails"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.Delete(Northwind.Data.TransactionManager,System.Int32,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_orderId">. Primary Key.</param>	
            <param name="_productId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.OrderDetails objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.OrderDetails objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.OrderDetails objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.OrderDetails objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.GetByOrderId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the OrderID index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_orderId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.GetByOrderIdProductId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Order_Details index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_orderId"></param>
            <param name="_productId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.OrderDetails"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.GetByProductId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ProductID index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_productId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.TList`1"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.OrderDetails})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.OrderDetails object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.OrderDetails)">
            <summary>
            	Inserts a Northwind.Entities.OrderDetails object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.OrderDetails object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.OrderDetails object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.OrderDetails)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.OrderDetails object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.OrderDetails object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlOrderDetailsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlShippersProviderBase">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Shippers"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlShippersProviderBase"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlShippersProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we should use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.Delete(Northwind.Data.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_shipperId">. Primary Key.</param>	
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.Find(Northwind.Data.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks>Operators must be capitalized (OR, AND).</remarks>
            <returns>Returns a typed collection of Northwind.Entities.Shippers objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Northwind.Entities.Shippers objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Shippers objects.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.GetPaged(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Northwind.Entities.Shippers objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.GetByShipperId(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Shippers index.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="_shipperId"></param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query.</param>
            <returns>Returns an instance of the <see cref="T:Northwind.Entities.Shippers"/> class.</returns>
            <remarks></remarks>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.BulkInsert(Northwind.Data.TransactionManager,Northwind.Entities.TList{Northwind.Entities.Shippers})">
            <summary>
            Lets you efficiently bulk insert many entities to the database.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entities">The entities.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Shippers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.Insert(Northwind.Data.TransactionManager,Northwind.Entities.Shippers)">
            <summary>
            	Inserts a Northwind.Entities.Shippers object into the datasource using a transaction.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Shippers object to insert.</param>
            <remarks>
            	After inserting into the datasource, the Northwind.Entities.Shippers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>	
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProviderBase.Update(Northwind.Data.TransactionManager,Northwind.Entities.Shippers)">
            <summary>
            	Update an existing row in the datasource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="entity">Northwind.Entities.Shippers object to update.</param>
            <remarks>
            	After updating the datasource, the Northwind.Entities.Shippers object will be updated
            	to refelect any changes made by the datasource. (ie: identity or computed columns)
            </remarks>
            <returns>Returns true if operation is successful.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlShippersProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlShippersProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlShippersProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.OrderDetailsExtended"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrderDetailsExtendedProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.AlphabeticalListOfProducts"/> entity.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the AlphabeticalListOfProducts objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of AlphabeticalListOfProducts objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of AlphabeticalListOfProducts objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of AlphabeticalListOfProducts objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlAlphabeticalListOfProductsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.StoredProcedureProvider">
            <summary>
            Summary description for Procedures.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.StoredProcedureProvider.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.StoredProcedureProvider"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.StoredProcedureProvider.Serialize(System.String)">
            <summary>
            Serializes the specified filename.
            </summary>
            <param name="filename">Filename.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.StoredProcedureProvider.Deserialize">
            <summary>
            Deserializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.StoredProcedureProvider.GetProcedureBodyFromEmbeddedResource(System.String)">
            <summary>
            Get the query text from the embedded xml file.
            </summary>
            <param name="name">The name of the query.</param>
            <returns>the text of the query</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Boolean)">
            <summary>
            Get the command wrapper, either from the stored procedures or from the embedded queries.
            </summary>
            <param name="database">The database instance.</param>
            <param name="commandName">the name of the sp.</param>
            <param name="useStoredProcedure">Indicates if we want stored procedure.</param>
            <returns></returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.StoredProcedureProvider.GetCommandWrapper(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Type,Northwind.Data.SqlFilterParameterCollection,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the command wrapper for a dynamically generated query and
            optionally includes server-side paging.
            </summary>
            <param name="database"></param>
            <param name="commandName"></param>
            <param name="columnEnum"></param>
            <param name="parameters"></param>
            <param name="orderBy"></param>
            <param name="start"></param>
            <param name="pageLength"></param>
            <returns></returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.StoredProcedureProvider.Current">
            <summary>
            Gets the current <see cref="T:Northwind.Data.SqlClient.StoredProcedureProvider"/> singleton instance.
            </summary>
            <value><see cref="T:Northwind.Data.SqlClient.StoredProcedureProvider"/></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.StoredProcedureProvider.Procedures">
            <summary>
            Gets or sets the procedures.
            </summary>
            <value>An <see cref="T:System.Collections.ArrayList"/> of <see cref="T:Northwind.Data.SqlClient.Procedure"/> objects.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.StoredProcedureProvider.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Northwind.Data.SqlClient.Procedure"/> instance with the specified name.
            </summary>
        </member>
        <member name="P:Northwind.Data.SqlClient.StoredProcedureProvider.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Northwind.Data.SqlClient.Procedure"/> instance at the specified index.
            </summary>
        </member>
        <member name="T:Northwind.Data.SqlClient.Procedure">
            <summary>
            Represents a sql query.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.Procedure.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.Procedure"/> instance.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.Procedure.Parameter(System.String)">
            <summary>
            Get the parameter from the specified name of the param.
            </summary>
            <param name="paramName">Name of the param.</param>
            <returns></returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.Procedure.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.Procedure.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.Procedure.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.Procedure.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.Procedure.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value></value>
        </member>
        <member name="T:Northwind.Data.SqlClient.Parameter">
            <summary>
            Respresents a query parameter.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.Parameter.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.Parameter"/> instance.
            </summary>
        </member>
        <member name="P:Northwind.Data.SqlClient.Parameter.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.Parameter.SqlType">
            <summary>
            Gets or sets the SqlType.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.Parameter.Direction">
            <summary>
            Gets or sets the Direction.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.Parameter.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.Parameter.Precision">
            <summary>
            Gets or sets the precision.
            </summary>
            <value></value>
        </member>
        <member name="P:Northwind.Data.SqlClient.Parameter.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value></value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlOrderDetailsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.OrderDetails"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderDetailsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrderDetailsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.CustomerCustomerDemo"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCustomerCustomerDemoProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.SalesTotalsByAmount"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSalesTotalsByAmountProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the ProductSalesFor1997 objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductSalesFor1997 objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of ProductSalesFor1997 objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of ProductSalesFor1997 objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlProductSalesFor1997ProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlSuppliersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Suppliers"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSuppliersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSuppliersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the CategorySalesFor1997 objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CategorySalesFor1997 objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CategorySalesFor1997 objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of CategorySalesFor1997 objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCategorySalesFor1997ProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.EmployeeTerritories"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlEmployeeTerritoriesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlProductSalesFor1997Provider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.ProductSalesFor1997"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductSalesFor1997Provider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductSalesFor1997Provider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the CurrentProductList objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CurrentProductList objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of CurrentProductList objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of CurrentProductList objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlCurrentProductListProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCurrentProductListProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.CurrentProductList"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCurrentProductListProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCurrentProductListProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlShippersProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Shippers"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlShippersProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlShippersProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.ProductsAboveAveragePrice"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlProductsAboveAveragePriceProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase">
            <summary>
            This class is the base repository for the CRUD operations on the SummaryOfSalesByYear objects.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase.#ctor">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase.GetAll(Northwind.Data.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SummaryOfSalesByYear objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase.Get(Northwind.Data.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of SummaryOfSalesByYear objects.</returns>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase.Find(Northwind.Data.TransactionManager,Northwind.Data.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:Northwind.Data.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:Northwind.Data.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of SummaryOfSalesByYear objects.</returns>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase.UseStoredProcedure">
            <summary>
            Gets or sets a value indicating whether to use stored procedures.
            </summary>
            <value><c>true</c> if we choose to use stored procedures; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProviderBase.ProviderInvariantName">
            <summary>
            Gets or sets the invariant provider name listed in the DbProviderFactories machine.config section.
            </summary>
            <value>The name of the provider invariant.</value>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.SummaryOfSalesByYear"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlSummaryOfSalesByYearProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlOrderSubtotalsProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.OrderSubtotals"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlOrderSubtotalsProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlOrderSubtotalsProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlInvoicesProvider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.Invoices"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlInvoicesProvider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlInvoicesProvider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
        <member name="T:Northwind.Data.SqlClient.SqlCategorySalesFor1997Provider">
            <summary>
             This class is the SqlClient Data Access Logic Component implementation for the <see cref="T:Northwind.Entities.CategorySalesFor1997"/> entity.
            </summary>
        </member>
        <member name="M:Northwind.Data.SqlClient.SqlCategorySalesFor1997Provider.#ctor(System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:Northwind.Data.SqlClient.SqlCategorySalesFor1997Provider"/> instance.
            Uses connection string to connect to datasource.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="useStoredProcedure">A boolean value that indicates if we use the stored procedures or embedded queries.</param>
            <param name="providerInvariantName">Name of the invariant provider use by the DbProviderFactory.</param>
        </member>
    </members>
</doc>
